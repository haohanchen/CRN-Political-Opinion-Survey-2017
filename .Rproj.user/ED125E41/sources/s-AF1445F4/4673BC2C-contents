---
title: "CRN Reserach"
author: "Haohan Chen"
output: rmarkdown::github_document
---


```{r global_options, include=FALSE}
knitr::opts_chunk$set(# fig.width=12, fig.height=8, 
                      fig.path='figs/',
                      echo=FALSE, warning=FALSE, message=FALSE, results = 'markup')
# Set encoding
Sys.setlocale("LC_ALL", locale="chs")
```

```{r loading}
#------------------------------
# Load Packages
#------------------------------
  pkgs <- c("nnet", "VGAM", "dplyr", "ggplot2", "cowplot","ggmap", "maps", "mapdata", "rgeos", "rgdal", "maptools", "fiftystater", "knitr", "stargazer", "PerformanceAnalytics", "gmodels", "vcdExtra")
  
  usePackage <- function(p){
    for (pkg in p){
      if (!is.element(pkg, installed.packages()[,1]))
        install.packages(pkg, dep = TRUE)
      require(pkg, character.only = TRUE)
    }
  }
  usePackage(pkgs)

# Map data: US map
  data("fifty_states")
# Map data: China map
  cn_map = readShapePoly('../Data/map/bou2_4p.shp')
```

```{r, results='hide'}
#------------------------------
# Load data
#------------------------------
rm(list=ls())
# Load dataset and codebook
  d = read.csv("../Data/Data.csv", sep = ",", stringsAsFactors = F, skip = 1, fileEncoding = "UTF-8-BOM")
  d$place_residence[which(d$place_residence == "new jeresy")] = "New Jersey"
  codebook = read.csv("../Data/codebook.csv", sep = ",", stringsAsFactors = F, fileEncoding = "UTF-8-BOM")

  save.image(file = "../Data/Data.Rda")

#------------------------------
# Recode variables
#------------------------------

# Demographics
#-------------
  x_demo <- list()

  # identity
    x_demo$sex_id_he <- as.numeric(d$gender_psy %in% "男")
    x_demo$sex_id_she <- as.numeric(d$gender_psy %in% "女")
    x_demo$sex_id_they <- as.numeric(d$gender_psy %in% c("两者皆是", "无", "不知道"))
  
  # orientation
    x_demo$sex_orien_male <- as.numeric(d$sex_orien == "男")
    x_demo$sex_orien_female <- as.numeric(d$sex_orien == "女")
    x_demo$sex_orien_both <- as.numeric(d$sex_orien == "两者皆是")
    
  # age
    x_demo$age <- d$yr_birth
    x_demo$age[x_demo$age == "1970及之前"] <- 1970
    x_demo$age <- 2017 - as.numeric(x_demo$age)
    
  # Years in North America
    x_demo$yr_am <- d$yr_arrive_am
    x_demo$yr_am[x_demo$yr_am == "1990年以前"] <- 1990
    x_demo$yr_am <- 2017 - as.numeric(x_demo$yr_am)
    
  # Place of birth
    x_demo$pob_prov_cn <- as.factor(d$place_birth)
    levels(x_demo$pob_prov_cn)
    # 东部，或东南沿海地区
      x_demo$pob_east <- as.numeric(x_demo$pob_prov_cn %in% 
                                  c("H河北省", "B北京市", "T天津市", 
                                    "S山东省", "J江苏省", "S上海市", 
                                    "Z浙江省", "F福建省", "G广东省", "H海南省"))
      # unique(x_demo$pob_prov_cn[x_demo$pob_east == 1])
      sum(x_demo$pob_east)
    # 东北地区
      unique(x_demo$pob_prov_cn[x_demo$pob_east == 1])
      x_demo$pob_ne <- as.numeric(x_demo$pob_prov_cn %in%
                                c("L辽宁省", "J吉林省", "H黑龙江省"))
      # unique(x_demo$pob_prov_cn[x_demo$pob_ne == 1])
      sum(x_demo$pob_ne)
    # 西部地区
      x_demo$pob_west <- as.numeric(x_demo$pob_prov_cn %in% c("C重庆市", "S四川省", "Y云南省", 
                                                      "G贵州省", "S陕西省", "Q青海省", 
                                                      "G甘肃省", "N宁夏回族自治区", "X新疆维吾尔族自治区", 
                                                      "X西藏自治区", "G广西壮族自治区", "N内蒙古自治区"))
      # unique(x_demo$pob_prov_cn[x_demo$pob_west == 1])
      sum(x_demo$pob_west)
    # 中部地区
      x_demo$pob_central <- as.numeric(x_demo$pob_prov_cn %in% c("H河南省", "S山西省", "A安徽省", "J江西省", "H湖北省", "H湖南省"))
      # unique(x_demo$pob_prov_cn[x_demo$pob_central == 1])
      sum(x_demo$pob_central)
    # Total.   
    sum(x_demo$pob_east) + sum(x_demo$pob_ne) + sum(x_demo$pob_west) + sum(x_demo$pob_central)

  # Place of residence in North America 
    x_demo$por <- as.factor(d$place_residence)
    x_demo$por_ny <- x_demo$por == "New York"
    x_demo$por_ca <- x_demo$por == "California"
  
  # Stay in the US
    x_demo$stay_us <- as.numeric(d$leave_us)

  # Marriage
    x_demo$relation_single <- as.numeric(d$marriage == "未婚，目前没有相处超过2个月的伴侣")
    x_demo$relation_married <- as.numeric(d$marriage == "已婚")
    x_demo$relation_ltr <- as.numeric(d$marriage == "未婚，目前有相处超过2个月的伴侣")
    x_demo$relation_married_ltr <- as.numeric(d$marriage %in% c("已婚", "未婚，目前有相处超过2个月的伴侣"))
  
  # Children: want or has children
    x_demo$children <- as.numeric(d$child != "否，暂无打算要小孩")
    
  # Religion
    x_demo$religious <- as.numeric(d$religion != "不信仰宗教")
  
  # Visa status
    x_demo$citizen_v <- as.numeric(d$citizenship %in% c("签证", "合法居住、", "合法居住", "绿卡申请中", "政治庇护", "工卡", "aos"))
    x_demo$citizen_gc <- as.numeric(d$citizenship == "绿卡／枫叶卡")
    x_demo$citizen_c <- as.numeric(d$citizenship == "公民")
  
  # Education
    # Highest degree
      x_demo$edu_hs <- as.numeric(d$edu_highest == "高中/高职 (High School/Professional higher vocational school )")
      x_demo$edu_ug <- as.numeric(d$edu_highest == "本科 (College)")
      x_demo$edu_master <- as.numeric(d$edu_highest == "研究生 (Master)")
      x_demo$edu_phd <- as.numeric(d$edu_highest == "博士 (Phd/JD/MD)")
  
    # STEM degree
      x_demo$edu_stem <- as.numeric(d$edu_stem == "是")
      
    # Student?
      x_demo$edu_student <- as.numeric(d$student == "是")
  
  # Work
    # Research
      x_demo$work_research <- as.numeric(d$job_univ_research == "是")
    # Computer science or data science
      x_demo$work_csds <- as.numeric(d$job_cs == "是")
    # Financial industry
      x_demo$work_fin <- as.numeric(d$job_finance == "是")
    # Management position
      x_demo$work_manage <- as.numeric(d$job_manage == "是")
  
  # Income        
    # Objective
      x_demo$income <- (as.numeric(sapply(d$income, function(x) gsub(",", "", strsplit(x, "-")[[1]][2])))-4999)/1000
      x_demo$income[which(is.na(x_demo$income))] <- 200
      hist(x_demo$income)
      # A lot of extremely low income. Why? students...
      table(d$income[d$student == "是"])
    # Subjective
      x_demo$income_status <- as.numeric(d$income_status)
    # Correlation of the two? (some check)
      plot(x_demo$income, x_demo$income_status)
      boxplot(x_demo$income ~ x_demo$income_status)
        
# Election
#-------------------
  y_elect <- list()
  # Election: Paimary_elect
    y_elect$vote_prim <- as.factor(d$vote_primary16)
    # levels(y_elect$vote_prim) <- c("桑德斯", "希拉里", "特朗普", "其他", "其他", "其他", "弃权", "其他")
    levels(y_elect$vote_prim) <- c("桑德斯", "希拉里", "特朗普", "其他或弃权", "其他或弃权", "其他或弃权", "其他或弃权", "其他或弃权")
    table(y_elect$vote_prim)
    
    y_elect$vote_prim_s <- as.numeric(y_elect$vote_prim == "桑德斯")
    y_elect$vote_prim_h <- as.numeric(y_elect$vote_prim == "希拉里")
    y_elect$vote_prim_t <- as.numeric(y_elect$vote_prim == "特朗普")
    y_elect$vote_prim_a <- as.numeric(y_elect$vote_prim == "弃权")

  # Election: General
    y_elect$vote_gen <- as.factor(d$vote_gen16)
    levels(y_elect$vote_gen) <- c("特朗普", "希拉里", "弃权")
    table(y_elect$vote_gen)
    
    y_elect$vote_gen_t <- as.numeric(y_elect$vote_gen == "特朗普")
    y_elect$vote_gen_h <- as.numeric(y_elect$vote_gen == "希拉里")
    y_elect$vote_gen_a <- as.numeric(y_elect$vote_gen == "弃权")
    
  # Party ID
    y_elect$party_id <- as.factor(d$party_id)
    levels(y_elect$party_id) <- c("共和党", "没有或其他党派", "民主党", "没有或其他党派")
    table(y_elect$party_id)
    
    y_elect$party_id_dem <- as.numeric(y_elect$party_id == "民主党")
    y_elect$party_id_rep <- as.numeric(y_elect$party_id == "共和党")
    y_elect$party_id_non <- as.numeric(y_elect$party_id == "没有或其他党派")

# Policy Preference
#-------------------
  y_policy <- list()

# Participation
#-------------------


# Information Preference
#------------------------
      
    
```

## 选举意向

学生数量 `r sum(x_demo$edu_student)`

```{r}
d_elect <- cbind(as.data.frame(x_demo), as.data.frame(y_elect))
summary(d_elect)
```

### 初选
```{r}
# Fit a multinomial logit model
m_prim <- vglm(vote_prim ~ income_status + age + relation_married + edu_ug + edu_master + edu_phd + edu_stem + work_manage + work_fin + work_csds, family = multinomial(refLevel = "特朗普"), data = d_elect)
summary(m_prim)

d_elect$vote_prim <- relevel(d_elect$vote_prim, ref = "特朗普")
m_prim <- multinom(vote_prim ~ income_status + age + relation_married + edu_ug + edu_master + edu_phd + edu_stem + work_manage + work_fin + work_csds, data = d_elect)
summary(m_prim)
confint(m_prim)

m_prim_t <- glm(vote_prim_t ~ income_status + age + relation_married + edu_ug + edu_master + edu_phd + edu_stem + work_manage + work_fin + work_csds, family=binomial(link="logit"), data = d_elect)
summary(m_prim_t)

m_prim_s <- glm(vote_prim_s ~ income_status + age + relation_married + edu_ug + edu_master + edu_phd + edu_stem + work_manage + work_fin + work_csds, family=binomial(link="logit"), data = d_elect)
summary(m_prim_s)

```

### 大选
```{r}
m_gen <- vglm(vote_gen ~ income_status + age + yr_am + religious + citizen_v + 
                relation_married + edu_master + edu_phd + edu_stem + work_manage + 
                work_fin + work_csds, family = multinomial(refLevel = "特朗普"), data = d_elect)
summary(m_gen)


m_gen_t <- glm(vote_gen_t ~ income_status + age + yr_am + religious + citizen_v + 
                relation_married + edu_master + edu_phd + edu_stem + work_manage + 
                work_fin + work_csds, family=binomial(link="logit"), 
               data = d_elect)
summary(m_gen_t)



```

